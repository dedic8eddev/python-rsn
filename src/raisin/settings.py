"""
Django settings for raisin project.

Generated by 'django-admin startproject' using Django 1.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import datetime
import os

from dotenv import load_dotenv
from jwt_auth.utils import import_from_string

load_dotenv()

APP_ROOT = os.path.abspath(os.path.dirname(__name__))
SECRET_KEY = os.getenv('RAISIN_SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "False") == "True"

if os.getenv("RAISIN_ALLOWED_HOSTS", None):
    ALLOWED_HOSTS = os.getenv("RAISIN_ALLOWED_HOSTS", None).split(',')

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django.contrib.admin',
    'storages',
    'rest_framework',
    'corsheaders',
    'django_countries',
    'django_filters',
    'fixtures',
    'jwt_auth',
    'refreshtoken',
    'widget_tweaks',
    'drf_yasg',
    'web.apps.WebConfig',
    'web_pro',
    'my_chargebee',
    'debug_toolbar',
    'cities',
    'news.apps.WebConfig',
    'multiselectfield',
    'reports'
]

AUTHENTICATION_BACKENDS = (
    'web.auth_backend.EmailModelBackend',
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'raisin.urls'

CORS_ALLOWED_ORIGINS = os.getenv("RAISIN_CORS_HOST", '').split(',')
CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^https://.+\.raisin\.digital$",
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            'src/web/templates',
            'src/web_pro/templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'web.context_processors.version_processor',
                'web.context_processors.user_lang_processor',
                'web.context_processors.main_menu_processor',
                'web.context_processors.site_url_images_processor'
            ],
        },
    },
]

WSGI_APPLICATION = 'raisin.wsgi.application'

# Database
AUTH_USER_MODEL = 'web.UserProfile'
LOGIN_URL = '/login'

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': os.getenv('RAISIN_DB_NAME'),
        'USER': os.getenv('RAISIN_DB_USER'),
        'PASSWORD': os.getenv('RAISIN_DB_PASS'),
        'HOST': os.getenv('RAISIN_DB_HOST'),
        'PORT': os.getenv('RAISIN_DB_PORT'),
        'LC_COLLATE': '',
        'LC_CTYPE': '',
        'TEST': {
            'NAME': 'testdb'
        }
    }
}

from .settings_common import *
MEDIA_URL = '/media/'
MEDIA_URL_AWS = '/media/'
WK_URL = '/.well-known/'
MEDIA_URL_TEMP = '/media/temp/'

STATIC_ROOT = os.path.join(os.path.abspath(os.path.dirname(__name__)), os.path.join('web', 'static/'))
WK_ROOT = os.path.join(os.path.abspath(os.path.dirname(__name__)), '.well-known/')
MEDIA_TEMP_ROOT = os.path.join(os.path.abspath(os.path.dirname(__name__)), 'media/temp')
PROJECT_ROOT = os.path.abspath(os.path.dirname(__name__))
MEDIA_HTTP_ROOT = 'http://localhost'

# Static files
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    # os.path.join(BASE_DIR, "static"),
    'web_pro/static/',
    'cities/static',
    'news/static',
    'web_pro/templates/admin/'
]
STATICFILES_STORAGE = 'web.utils.storage.HashPathStaticFilesStorage'
DEFAULT_FILE_STORAGE = 'web.utils.storage.MediaStorage'

# Email settings
EMAIL_HOST = 'smtp.mailgun.org'
EMAIL_HOST_USER = 'postmaster@raisin.digital'
EMAIL_HOST_PASSWORD = 'e2527b13c4577d7c7f1c96d43ccc2e09'
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_USE_TLS = False
EMAIL_FROM = 'raisin@raisin.digital'
EMAIL_FROM_NAME = 'Raisin TEST'

# Dummy email backend: uncomment to enable
# EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
# EMAIL_FILE_PATH = '/Users/calina/sites/raisin/emails'

DATA_UPLOAD_MAX_MEMORY_SIZE = 666666666
FILE_UPLOAD_MAX_MEMORY_SIZE = 10242880
FILE_UPLOAD_HANDLERS = [
    "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler"
]

# MAX. FAILED LOGINS
MAX_FAILED_ATTEMPTS = 10
FAILED_ATTEMPTS_BLOCKER_MIN = 10

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

QUIT_ON_MAX_AUTH_FAILURES_CNT = True

# JWT settings
JWT_PAYLOAD_HANDLER = import_from_string(
    'web.jwt_handlers.jwt_payload_handler'
)
JWT_DECODE_HANDLER = import_from_string('web.jwt_handlers.jwt_decode_handler')
JWT_EXPIRATION_DELTA = datetime.timedelta(seconds=315360000)
JWT_RESPONSE_PAYLOAD_HANDLER = import_from_string(
    'web.jwt_handlers.jwt_response_payload_handler'
)
JWT_AUTH_HEADER_PREFIX = 'Token'

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'web.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'EXCEPTION_HANDLER': 'web.utils.exceptions.custom_exception_handler',
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}

# Internationalisation
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = False

TIMELINE_PAGE_SIZE = 10
NO_LIMIT_ALLOWED = True
MAX_ACTIVATION_REMINDERS = 3
ACTIVATION_REMINDER_DAYS_INTERVAL = 7
DEFAULT_IMAGE = 'no-img.jpg'

from .settings_logging import *
from .settings_third_parties import *
from .settings_star_review import *
from .settings_android import *
from .settings_celery import *

TEMPORARY_ACCESS_ALLOWED = False
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)
HOME_PAGE = "list_places"
SIMILARITY_THRESHOLD = 0.2

# if-construction for alternate caches for local docker environment
# through .env (.env_dev)
if os.getenv('RAISIN_CACHES'):
    CACHES_STR = os.getenv('RAISIN_CACHES')
    CACHES = eval(CACHES_STR)
else:
    CACHES = {
        "default": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": "redis://127.0.0.1:6379/1",
            "OPTIONS": {
                "CLIENT_CLASS": "django_redis.client.DefaultClient"
            },
            "KEY_PREFIX": "example",
            "TIMEOUT": None,
        }
    }

# The Debug Toolbar is shown only if your IP address is listed in this list
INTERNAL_IPS = [
    '127.0.0.1',
]

DEBUG_TOOLBAR_PANELS = [
    'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    'debug_toolbar.panels.settings.SettingsPanel',
    'debug_toolbar.panels.headers.HeadersPanel',
    'debug_toolbar.panels.request.RequestPanel',
    'debug_toolbar.panels.sql.SQLPanel',
    'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    'debug_toolbar.panels.templates.TemplatesPanel',
    'debug_toolbar.panels.cache.CachePanel',
    'debug_toolbar.panels.signals.SignalsPanel',
    'debug_toolbar.panels.logging.LoggingPanel',
    'debug_toolbar.panels.redirects.RedirectsPanel',
    'debug_toolbar.panels.profiling.ProfilingPanel',
]

RAISIN_SHOW_DEBUG_TOOLBAR = os.getenv("RAISIN_SHOW_DEBUG_TOOLBAR", False)


def show_toolbar(request):
    return RAISIN_SHOW_DEBUG_TOOLBAR


DEBUG_TOOLBAR_CONFIG = {
    # Toolbar options
    "SHOW_TOOLBAR_CALLBACK": show_toolbar,
    'RESULTS_CACHE_SIZE': 3,
    'SHOW_COLLAPSED': True,
    'SQL_WARNING_THRESHOLD': 100,   # milliseconds
}

CITIES_LOCALES = ['en', 'und', 'fr', 'ja', 'de', 'es', 'it']


CITIES_DATA_DIR = './data'
CITIES_SKIP_CITIES_WITH_EMPTY_REGIONS = True

CITIES_FILES = {
    # ...
    'city': {
       # 'filename': 'cities10000.zip',
       'filenames': ['cities500.zip', 'FR.zip', 'GB.zip'],
       'urls':     ['http://download.geonames.org/export/dump/'+'{filename}']
    },
}

# User account deletion settings
# Generic account to transfer related entities to during deletion process
ERASED_USER_UUID = os.getenv('RAISIN_ERASED_USER_UUID')

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
RAISIN_NEW_WEBSITE = os.getenv('RAISIN_NEW_WEBSITE')
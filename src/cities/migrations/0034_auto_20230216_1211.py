# Generated by Django 3.2.13 on 2023-02-16 12:11

from django.db import migrations
from django.template.defaultfilters import slugify as slugify_django
from cities.conf import SLUGIFY_FUNCTION
slugify_func = SLUGIFY_FUNCTION


def slugify(obj):
    if hasattr(obj, 'name'):
        if hasattr(obj, 'region'):
            slug = slugify_django(obj.name)
            qs = obj.__class__.objects.filter(region=obj.region, slug=slug)
            if obj.id:
                qs = qs.exclude(id=obj.id)
            if qs.exists():
                number = qs.count()
                return f'{slug}-{number}'
        return slugify_django(obj.name)
    

def set_localized_slugs(obj):
    obj.slug = slugify_func(obj, slugify(obj))
    if hasattr(obj, 'name') and hasattr(obj, 'name_en'):
        obj.slug_en = slugify_func(obj, slugify_django(obj.name_en or obj.name))
    if hasattr(obj, 'name') and hasattr(obj, 'name_ja'):
        obj.slug_ja = slugify_func(obj, slugify_django(obj.name_en or obj.name))
    if hasattr(obj, 'name') and hasattr(obj, 'name_es'):
        obj.slug_es = slugify_func(obj, slugify_django(obj.name_es or obj.name))
    if hasattr(obj, 'name') and hasattr(obj, 'name_it'):
        obj.slug_it = slugify_func(obj, slugify_django(obj.name_it or obj.name))
    if hasattr(obj, 'name') and hasattr(obj, 'name_fr'):
        obj.slug_fr = slugify_func(obj, slugify_django(obj.name_fr or obj.name))
    return obj


def get_name(obj, lang_code):
    alt_names = obj.alt_names.filter(language_code=lang_code)
    name = ''
    if alt_names.exists():
        name = alt_names.first().name
    return name or obj.name


def set_localized_names(obj):
    obj.name_en = get_name(obj, 'en')
    obj.name_es = get_name(obj, 'es')
    obj.name_ja = get_name(obj, 'ja')
    obj.name_fr = get_name(obj, 'fr')
    obj.name_it = get_name(obj, 'it')
    return obj


def fill_localized_name_and_slug(apps, schema_editor):
    country_model = apps.get_model('cities', 'Country')
    for country in country_model.objects.all():
        country = set_localized_names(country)
        country = set_localized_slugs(country)
        country.save()
    region_model = apps.get_model('cities', 'Region')
    for region in region_model.objects.all():
        region = set_localized_names(region)
        region = set_localized_slugs(region)
        region.save()
    city_model = apps.get_model('cities', 'City')
    for city in city_model.objects.all():
        city = set_localized_names(city)
        city = set_localized_slugs(city)
        city.save()
    district_model = apps.get_model('cities', 'District')
    for district in district_model.objects.all():
        district = set_localized_names(district)
        district = set_localized_slugs(district)
        district.save()
    

class Migration(migrations.Migration):

    dependencies = [
        ('cities', '0033_auto_20230215_1912'),
    ]

    operations = [
        migrations.RunPython(fill_localized_name_and_slug, reverse_code=migrations.RunPython.noop),
    ]
